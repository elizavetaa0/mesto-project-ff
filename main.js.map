{"version":3,"file":"main.js","mappings":"mBAMA,IAAMA,EACK,iDADLA,EAEK,CACPC,cAAe,uCACf,eAAgB,oBAIdC,EAAiB,SAACC,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,wBAADC,OAAyBL,EAAIM,QACpD,ECjBMC,EAAeC,SAASC,cAAc,kBAAkBC,QAE9D,SAASC,EAAiBC,GACxBA,EAAWC,UAAUC,OAAO,8BAC9B,CAEA,SAASC,EAAWC,EAAUC,EAAQC,EAAQC,EAASC,EAAWC,EAAYV,EAAkBW,GAC9F,IACMC,EADchB,EAAaiB,WAAU,GACdf,cAAc,SACrCG,EAAaW,EAASd,cAAc,sBACpCgB,EAAYF,EAASd,cAAc,gBACnCiB,EAAeH,EAASd,cAAc,wBACtCkB,EAAeJ,EAASd,cAAc,oBAmD5C,OAjDAgB,EAAUG,IAAMZ,EAASa,KACzBN,EAASd,cAAc,gBAAgBqB,YAAcd,EAASe,KAC9DN,EAAUO,IAAMhB,EAASe,KACzBJ,EAAaG,YAAcV,EAAUa,OAEjCd,IAAYD,GACdQ,EAAaQ,MAAMC,QAAU,QAC7BT,EAAaU,iBAAiB,SAAS,WACvCf,EAAWE,EAAUN,EACrB,KAGAS,EAAaQ,MAAMC,QAAU,OAGjCvB,EAAWwB,iBAAiB,SAAS,SAACC,GACpCA,EAAIC,iBACqB1B,EAAWC,UAAU0B,SAAS,+BDmBzD,SAAoBtB,GAClB,OAAOuB,MAAK,GAAAnC,OAAKR,EAAc,iBAAAQ,OAAgBY,GAAU,CACvDwB,OAAQ,SACRC,QAAS,CACP5C,cAAeD,EAAeC,iBAIjC6C,KAAK5C,EACR,CC1BI6C,CAAW3B,GACR0B,MAAK,SAACE,GACLlB,EAAaG,YAAce,EAAYC,MAAMb,OAC7CtB,EAAiBC,EACnB,IACCmC,OAAM,SAACC,GACNC,QAAQC,IAAI,4BAA6BF,EAC3C,IDDN,SAAkB/B,GAChB,OAAOuB,MAAK,GAAAnC,OAAKR,EAAc,iBAAAQ,OAAgBY,GAAU,CACvDwB,OAAQ,MACRC,QAAS,CACP5C,cAAeD,EAAeC,iBAIjC6C,KAAK5C,EACR,CCNIoD,CAASlC,GACN0B,MAAK,SAACE,GACLlB,EAAaG,YAAce,EAAYC,MAAMb,OAC7CtB,EAAiBC,EACnB,IACCmC,OAAM,SAACC,GACNC,QAAQC,IAAI,gCAAiCF,EAC/C,GAEN,IAEEvB,EAAUW,iBAAiB,SAAS,SAACC,GACnCA,EAAIC,iBACJhB,EAAsBe,EACxB,IAEkBjB,EAAUgC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQpC,CAAM,KAE1DN,EAAWC,UAAU0C,IAAI,+BAGpBhC,CAET,CAEA,SAASF,EAAWE,EAAUN,IDL9B,SAAuBA,GACrB,OAAOuB,MAAM,GAADnC,OAAIR,EAAc,WAAAQ,OAAUY,GAAU,CAChDwB,OAAQ,SACRC,QAAS,CACP5C,cAAeD,EAAeC,iBAGjC6C,KAAK5C,EACR,ECFEyD,CAAcvC,GACX0B,MAAK,WACJpB,EAASkC,QACX,IACCV,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAI,iCAAkCF,EAAM,GAC1E,CC3EA,SAASU,EAAUC,GACjBA,EAAM9C,UAAU0C,IAAI,mBACpBI,EAAMvB,iBAAiB,QAASwB,GAChCpD,SAAS4B,iBAAiB,UAAWyB,EACvC,CAEA,SAASC,EAAWH,GAClBA,EAAM9C,UAAU4C,OAAO,mBACvBE,EAAMI,oBAAoB,QAASH,GACnCpD,SAASuD,oBAAoB,UAAWF,EAC1C,CAGA,SAASA,EAAkBG,GACP,WAAdA,EAAMC,KAENH,EADkBtD,SAASC,cAAc,oBAG/C,CAEA,SAASmD,EAAoBI,GAC3B,GAAIA,EAAME,OAAOrD,UAAU0B,SAAS,UAAYyB,EAAME,OAAOrD,UAAU0B,SAAS,gBAAiB,CAC/F,IAAM4B,EAAeH,EAAMI,cACvBD,GACFL,EAAWK,EAEf,CACF,CC3BO,IAAMtE,EAAS,CACpBwE,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBCJRC,EAAsB,SAACC,EAAe/E,GAC1C+E,EAAcC,aAAa,YAAY,GACvCD,EAAc/D,UAAU0C,IAAI1D,EAAO2E,oBACrC,EASMM,EAAiB,SAACC,EAAaC,EAAcnF,GACjD,IAAMoF,EAAeF,EAAYtE,cAAc,IAADJ,OAAK2E,EAAaE,GAAE,WAClEF,EAAanE,UAAU4C,OAAO5D,EAAO4E,iBACrCQ,EAAanD,YAAc,GAC3BmD,EAAapE,UAAU4C,OAAO5D,EAAO6E,WACvC,EAsCMS,EAAkB,SAACJ,EAAalF,GAClBkF,EAAYK,iBAAiBvF,EAAOyE,eAC5Ce,SAAQ,SAACL,GACjBF,EAAeC,EAAaC,EAAcnF,GAC1CmF,EAAaM,kBAAkB,GACjC,IACA,IAAMV,EAAgBG,EAAYtE,cAAcZ,EAAO0E,sBACvDI,EAAoBC,EAAe/E,EACrC,EAQM0F,EAAoB,SAACC,EAAWZ,EAAe/E,IAN7B,SAAC2F,GACvB,OAAOC,MAAMC,KAAKF,GAAWpC,MAAK,SAAC4B,GACjC,OAAQA,EAAaW,SAASC,KAChC,GACF,CAGMC,CAAgBL,IAGlBZ,EAAc/D,UAAU4C,OAAO5D,EAAO2E,qBACtCI,EAAckB,gBAAgB,aAH9BnB,EAAoBC,EAAe/E,EAKvC,E,0GCpEA,IAoBIqB,EApBE6E,EAAWvF,SAASC,cAAc,iBAClCuF,EAAYxF,SAASC,cAAc,wBACnCwF,EAAazF,SAASC,cAAc,yBACpCyF,EAAe1F,SAASC,cAAc,wBACtC0F,EAAmB3F,SAASC,cAAc,oBAC1C2F,EAAa5F,SAASC,cAAc,qBACpC4F,EAAkB7F,SAASC,cAAc,2BACzC6F,EAAY9F,SAASC,cAAc,2BACnC8F,EAAW/F,SAASC,cAAc,kCAClC+F,EAAgBhG,SAASC,cAAc,gCACvCgG,EAAejG,SAASC,cAAc,0BACtCiG,EAAeN,EAAW3F,cAAc,iBACxCkG,EAAiBP,EAAW3F,cAAc,mBAC1CmG,EAAcpG,SAASC,cAAc,mBACrCoG,EAAarG,SAASC,cAAc,yBACpCqG,EAAetG,SAASuG,MAAM,aAC9BC,EAAexG,SAASuG,MAAM,eAC9BE,EAAmBzG,SAASC,cAAc,mBAC1CyG,EAAiB1G,SAASC,cAAc,6BA8C9C,SAASa,EAAsB0C,GAC7BA,EAAM1B,iBACNoB,EAAU0C,GACV,IAAMe,EAAcnD,EAAME,OAAOtC,IAC3BwF,EAAUpD,EAAME,OAAOlC,IAC7B0E,EAAa9E,IAAMuF,EACnBR,EAAe7E,YAAcsF,CAC/B,CAqHA,SAASC,EAAcC,EAAQC,GAC7BD,EAAOxF,YAAcyF,CACvB,CAzKApH,QAAQqH,IAAI,CLVLhF,MAAK,GAAAnC,OAAKR,EAAc,aAAa,CAC1C6C,QAAS,CACP5C,cAAeD,EAAeC,iBAG/B6C,KAAK5C,GAICyC,MAAM,GAADnC,OAAIR,EAAc,UAAU,CACxC6C,QAAS,CACP5C,cAAeD,EAAeC,iBAG/B6C,KAAK5C,KKHL4C,MAAK,SAAA8E,GAA2B,I,IAAAC,G,EAAA,E,4CAAAD,I,o2BAAzBE,EAAQD,EAAA,GAAEE,EAASF,EAAA,GACzBxG,EAASyG,EAASrE,IAClB9C,SAASC,cAAc,mBAAmBqB,YAAc6F,EAAS5F,KACjEvB,SAASC,cAAc,yBAAyBqB,YAAc6F,EAASE,MACvErH,SAASC,cAAc,mBAAmByB,MAAM4F,gBAAkB,OAAHzH,OAAUsH,EAASI,OAAM,KAExFH,EAAUvC,SAAQ,SAACrE,GACjB,IAAMC,EAASD,EAASsC,IAClBlC,EAAYJ,EAAS8B,MACrB3B,EAAUH,EAASgH,MAAM1E,IACzB2E,EAAclH,EAClBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAV,EACAW,GAEFyE,EAASmC,YAAYD,EACvB,GACF,IACClF,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAI,+BAAgCF,EAAM,IA4BtE,WAAsC,QAAAmF,EAAAC,UAAAnG,OAARoG,EAAM,IAAA5C,MAAA0C,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAND,EAAMC,GAAAF,UAAAE,GAClCD,EAAOhD,SAAQ,SAAA1B,GACTA,GACFA,EAAM9C,UAAU0C,IAAI,oBAExB,GACF,CAEAgF,CAAkBrC,EAAcC,EAAkBC,EAAYC,GAE9DL,EAAU5D,iBAAiB,SAAS,WAClC0E,EAAa0B,QACbrD,EAAgB2B,EAAcjH,GAC9B6D,EAAUwC,EACZ,IAGAD,EAAW7D,iBAAiB,SAAS,WACnC+C,EAAgBgB,EAAkBtG,GAClC6D,EAAUyC,GACVG,EAAUmC,MAAQ7B,EAAY9E,YAC9ByE,EAASkC,MAAQ5B,EAAW/E,WAC9B,IAEAmF,EAAiB7E,iBAAiB,SAAS,WACzC4E,EAAawB,QACbrD,EAAgB6B,EAAcnH,GAC9B6D,EAAU2C,EACZ,IAoBqB7F,SAAS4E,iBAAiB,iBAClCC,SAAQ,SAAAiC,GACnB,IAAM3D,EAAQ2D,EAAOoB,QAAQ,UAC7BpB,EAAOlF,iBAAiB,SAAS,kBAAM0B,EAAWH,EAAM,GAC1D,IAwBAwC,EAAiB/D,iBAAiB,UAtBlC,SAA+BC,GAC7BA,EAAIC,iBACJ,IAAMqG,EAAaxC,EAAiB1F,cAAc,kBAClD4G,EAAcsB,EAAY,iBAC1B,ILpEmBC,EAAaC,EKoE1BC,EAAUxC,EAAUmC,MACpBM,EAAWxC,EAASkC,MAC1B7B,EAAY9E,YAAcgH,EAC1BjC,EAAW/E,YAAciH,GLvENH,EKwEPE,ELxEoBD,EKwEXE,ELvEdvG,MAAM,GAADnC,OAAIR,EAAc,aAAa,CACzC4C,OAAQ,QACRC,QAAS,CACP5C,cAAeD,EAAeC,cAC9B,eAAgB,oBAElBkJ,KAAMC,KAAKC,UAAU,CACnBnH,KAAM6G,EACNf,MAAOgB,MAIRlG,KAAK5C,GACL4C,MAAK,SAACwG,GACP,OAAOA,CACT,KKyDGxG,MAAK,SAACgF,GACLf,EAAY9E,YAAcgH,EAC1BjC,EAAW/E,YAAciH,EACzBjF,EAAWqC,EACb,IACCpD,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,EAChD,IACCoG,SAAQ,WACP/B,EAAcsB,EAAY,YAC5B,GACJ,IA6CA7B,EAAa1E,iBAAiB,UAzC9B,SAA8BC,GAC5BA,EAAIC,iBAEJ,ILvEkB+G,EAAUC,EKuEtBX,EAAaxC,EAAiB1F,cAAc,kBAElD4G,EADqBnB,EAAazF,cAAc,kBACpB,kBLzEV4I,EK0EE7C,EAAciC,ML1ENa,EK2ER7C,EAAagC,ML1E1BjG,MAAM,GAADnC,OAAIR,EAAc,UAAU,CACtC4C,OAAQ,OACRC,QAAS,CACP5C,cAAeD,EAAeC,cAC9B,eAAgB,oBAElBkJ,KAAMC,KAAKC,UAAU,CACnBnH,KAAMsH,EACNxH,KAAMyH,MAIT3G,KAAK5C,IKiEH4C,MAAK,SAAC4G,GAlHX,IAAiBvI,EAKTO,EALSP,EAmHM,CACf8B,MAAOyG,EAAYzG,MACnBQ,IAAKiG,EAAYjG,IACjBvB,KAAMwH,EAAYxH,KAClBF,KAAM0H,EAAY1H,KAClBmG,MAAO,CACLjG,KAAMwH,EAAYvB,MAAMjG,KACxB8F,MAAO0B,EAAYvB,MAAMH,MACzBE,OAAQwB,EAAYvB,MAAMD,OAC1BzE,IAAKiG,EAAYvB,MAAM1E,IACvBkG,OAAQD,EAAYvB,MAAMwB,QAE5BC,UAAWF,EAAYE,WA1HvBlI,EAAWR,EACfC,EALaA,EAASsC,SAgIpBoG,EA/HY1I,EAASgH,MAAM1E,IACbtC,EAAS8B,MAQzBzB,EACAV,EACAW,GACFyE,EAAS4D,QAAQpI,GAoHbc,EAAI6B,OAAOsE,QACX1E,EAAWoC,EACb,IACCnD,OAAM,SAACC,GACNC,QAAQC,IAAI,yCAA0CF,EACxD,IACCoG,SAAQ,WACP/B,EAAcsB,EAAY,YAC5B,GACJ,IAOA3B,EAAa5E,iBAAiB,UA1F9B,SAA8BC,GAC5BA,EAAIC,iBACJ,ILLqBsH,EKKfjB,EAAatC,EAAgB5F,cAAc,kBACjD4G,EAAcsB,EAAY,kBLNLiB,EKOA1C,EAAeuB,MLN7BjG,MAAM,GAADnC,OAAIR,EAAc,oBAAoB,CAChD4C,OAAQ,QACRC,QAAS,CACP5C,cAAeD,EAAeC,cAC9B,eAAgB,oBAElBkJ,KAAMC,KAAKC,UAAU,CACnBnB,OAAQ6B,MAIXjH,KAAK5C,IKHL4C,MAAK,SAACkH,GACLrJ,SAASC,cAAc,mBAAmByB,MAAM4F,gBAAkB,OAAHzH,OAAUwJ,EAAU9B,OAAM,KACzFjE,EAAWuC,EACb,IACCtD,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,EACjD,IACCoG,SAAQ,WACP/B,EAAcsB,EAAY,YAC5B,GACF,IDpFyB,SAAC9I,GACPW,SAAS4E,iBAAiBvF,EAAOwE,cACzCgB,SAAQ,SAACN,GAChBA,EAAY3C,iBAAiB,UAAU,SAASC,GAC9CA,EAAIC,gBACN,IAjBsB,SAACyC,EAAalF,GACtC,IAAM2F,EAAYT,EAAYK,iBAAiBvF,EAAOyE,eAChDM,EAAgBG,EAAYtE,cAAcZ,EAAO0E,sBACvDgB,EAAkBC,EAAWZ,EAAe/E,GAC5C2F,EAAUH,SAAQ,SAACL,GACjBA,EAAa5C,iBAAiB,SAAS,SAACC,IAnBjB,SAAC0C,EAAaC,EAAcnF,GACjDmF,EAAaW,SAASmE,gBACxB9E,EAAaM,kBAAkBN,EAAa+E,QAAQC,cAEpDhF,EAAaM,kBAAkB,IAG5BN,EAAaW,SAASC,MAGzBd,EAAeC,EAAaC,EAAcnF,GAxBvB,SAACkF,EAAaC,EAAcgF,EAAcnK,GAC/D,IAAMoF,EAAeF,EAAYtE,cAAc,IAADJ,OAAK2E,EAAaE,GAAE,WAClEF,EAAanE,UAAU0C,IAAI1D,EAAO4E,iBAClCQ,EAAanD,YAAckI,EAC3B/E,EAAapE,UAAU0C,IAAI1D,EAAO6E,WACpC,CAiBIuF,CAAelF,EAAaC,EAAcA,EAAakF,kBAAmBrK,EAI9E,CAQMsK,CAAmBpF,EAAa1C,EAAI6B,OAAQrE,GAC5C0F,EAAkBC,EAAWZ,EAAe/E,EAC9C,GACF,GACF,CAQIuK,CAAkBrF,EAAalF,EACjC,GACF,CCwJAwK,CAAiBxK,E","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/config.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//Токен: 08a43134-6ee2-4e78-92c0-d49d38caaecf \r\n\r\n//Идентификатор группы: wff-cohort-2 \r\n\r\n//Адрес сервера проекта Mesto: https://mesto.nomoreparties.co \r\n\r\nconst config = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-2',\r\n  headers: {\r\n    authorization: '08a43134-6ee2-4e78-92c0-d49d38caaecf',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n}\r\n\r\n//запросы данных о пользователе и карточек \r\nfunction getUserData() { \r\nreturn fetch (`${config.baseUrl}/users/me`, { \r\n  headers: { \r\n    authorization: config.headers.authorization \r\n  } \r\n}) \r\n  .then(handleResponse)\r\n}\r\n\r\nfunction getCardsData () {\r\n  return fetch(`${config.baseUrl}/cards`, { \r\n  headers: { \r\n    authorization: config.headers.authorization, \r\n  }, \r\n}) \r\n  .then(handleResponse) \r\n}\r\n\r\n//постановка/снятие лайка \r\nfunction likeCard(cardId) { \r\n  return fetch (`${config.baseUrl}/cards/likes/${cardId}`, { \r\n    method: 'PUT', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n    }, \r\n  }) \r\n\r\n  .then(handleResponse) \r\n} \r\n\r\nfunction unlikeCard(cardId) { \r\n  return fetch (`${config.baseUrl}/cards/likes/${cardId}`, { \r\n    method: 'DELETE', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n    }, \r\n  }) \r\n\r\n  .then(handleResponse) \r\n}\r\n\r\n//удаление карточки \r\nfunction deleteNewCard(cardId) { \r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, { \r\n    method: 'DELETE', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n    }, \r\n  }) \r\n  .then(handleResponse) \r\n}\r\n\r\n//редактирование профиля \r\nfunction editProfile(profileName, profileAbout) { \r\n  return fetch(`${config.baseUrl}/users/me`, { \r\n    method: 'PATCH', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n      'Content-Type': 'application/json' \r\n    }, \r\n    body: JSON.stringify({ \r\n      name: profileName, \r\n      about: profileAbout, \r\n    }), \r\n  }) \r\n\r\n    .then(handleResponse) \r\n    .then((getUserData) => { \r\n    return getUserData; \r\n  }) \r\n} \r\n\r\n//добавление новой карточки \r\nfunction addNewCard(cardName, cardLink) { \r\n  return fetch(`${config.baseUrl}/cards`, { \r\n    method: 'POST', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n      'Content-Type': 'application/json' \r\n    }, \r\n    body: JSON.stringify({ \r\n      name: cardName, \r\n      link: cardLink, \r\n    }), \r\n  }) \r\n\r\n  .then(handleResponse) \r\n} \r\n\r\n//обновление аватара \r\nfunction updateAvatar (avatarImg) { \r\n  return fetch(`${config.baseUrl}/users/me/avatar`, { \r\n    method: 'PATCH', \r\n    headers: { \r\n      authorization: config.headers.authorization, \r\n      'Content-Type': 'application/json' \r\n    }, \r\n    body: JSON.stringify({ \r\n      avatar: avatarImg, \r\n    }), \r\n  }) \r\n\r\n  .then(handleResponse) \r\n}\r\n\r\nexport {getUserData, getCardsData, addNewCard, editProfile, updateAvatar, likeCard, unlikeCard, deleteNewCard}; ","import { deleteNewCard, likeCard, unlikeCard } from \"./api\"; \r\n\r\nconst cardTemplate = document.querySelector('#card-template').content; \r\n\r\nfunction handleLikeButton(likeButton) { \r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n} \r\n\r\nfunction createCard(cardData, cardId, userId, ownerId, cardLikes, deleteCard, handleLikeButton, openImagePopupHandler) { \r\n  const cardElement = cardTemplate.cloneNode(true); \r\n  const cardItem = cardElement.querySelector('.card'); \r\n  const likeButton = cardItem.querySelector('.card__like-button'); \r\n  const imgButton = cardItem.querySelector('.card__image'); \r\n  const deleteButton = cardItem.querySelector('.card__delete-button'); \r\n  const likesCounter = cardItem.querySelector('.number-of-likes'); \r\n\r\n  imgButton.src = cardData.link; \r\n  cardItem.querySelector('.card__title').textContent = cardData.name; \r\n  imgButton.alt = cardData.name; \r\n  likesCounter.textContent = cardLikes.length;\r\n\r\n  if (ownerId === userId) { \r\n    deleteButton.style.display = 'block'; \r\n    deleteButton.addEventListener('click', () => { \r\n    deleteCard(cardItem, cardId); \r\n    }); \r\n  }  \r\n  else { \r\n    deleteButton.style.display = 'none'; \r\n  } \r\n\r\nlikeButton.addEventListener('click', (evt) => { \r\n  evt.preventDefault(); \r\n  const isCurrentlyLiked = likeButton.classList.contains('card__like-button_is-active'); \r\n  if (isCurrentlyLiked) { \r\n    unlikeCard(cardId) \r\n      .then((updatedCard) => { \r\n        likesCounter.textContent = updatedCard.likes.length; \r\n        handleLikeButton(likeButton); \r\n      }) \r\n      .catch((error) => { \r\n        console.log('Ошибка при снятии лайка: ', error); \r\n      }); \r\n  } else { \r\n    likeCard(cardId) \r\n      .then((updatedCard) => { \r\n        likesCounter.textContent = updatedCard.likes.length; \r\n        handleLikeButton(likeButton); \r\n      }) \r\n      .catch((error) => { \r\n        console.log('Ошибка при постановке лайка: ', error); \r\n      }); \r\n  } \r\n});  \r\n\r\n  imgButton.addEventListener('click', (evt) => { \r\n    evt.preventDefault(); \r\n    openImagePopupHandler(evt); \r\n  }); \r\n\r\n  const userLiked = cardLikes.some(user => user._id === userId);\r\n  if(userLiked) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n  return cardItem; \r\n\r\n} \r\n\r\nfunction deleteCard(cardItem, cardId) { \r\n  deleteNewCard(cardId) \r\n    .then(() => { \r\n      cardItem.remove(); \r\n    }) \r\n    .catch((error) => console.log('Ошибка при удалении карточки: ', error)); \r\n} \r\n\r\nexport {createCard, cardTemplate, deleteCard, handleLikeButton};","function openModal(popup) { \r\n  popup.classList.add('popup_is-opened'); \r\n  popup.addEventListener('click', closeByOverlayClick); \r\n  document.addEventListener('keydown', closeByEscHandler); \r\n} \r\n\r\nfunction closeModal(popup) { \r\n  popup.classList.remove('popup_is-opened'); \r\n  popup.removeEventListener('click', closeByOverlayClick); \r\n  document.removeEventListener('keydown', closeByEscHandler); \r\n} \r\n\r\n\r\nfunction closeByEscHandler(event) { \r\n  if (event.key === 'Escape') { \r\n    const openedPopup = document.querySelector('.popup_is-opened'); \r\n      closeModal(openedPopup);\r\n  } \r\n} \r\n\r\nfunction closeByOverlayClick(event) { \r\n  if (event.target.classList.contains('popup') || event.target.classList.contains('popup__close')) { \r\n    const clickedPopup = event.currentTarget; \r\n    if (clickedPopup) { \r\n      closeModal(clickedPopup); \r\n    } \r\n  } \r\n} \r\n\r\nexport {openModal, closeModal}; ","export const config = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n","import {config} from './config.js';\r\n\r\nconst disableSubmitButton = (buttonElement, config) => {\r\n  buttonElement.setAttribute('disabled', true);\r\n  buttonElement.classList.add(config.inactiveButtonClass)\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, config) => { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.add(config.inputErrorClass); \r\n  errorElement.textContent = errorMessage; \r\n  errorElement.classList.add(config.errorClass); \r\n}; \r\n\r\nconst hideInputError = (formElement, inputElement, config) => { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.remove(config.inputErrorClass); \r\n  errorElement.textContent = ''; \r\n  errorElement.classList.remove(config.errorClass); \r\n}; \r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => { \r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, config) => { \r\n  const inputList = formElement.querySelectorAll(config.inputSelector);\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector); \r\n  toggleButtonState(inputList, buttonElement, config); \r\n  inputList.forEach((inputElement) => { \r\n    inputElement.addEventListener('input', (evt) => { \r\n      checkInputValidity(formElement, evt.target, config); \r\n      toggleButtonState(inputList, buttonElement, config); \r\n    }); \r\n  });\r\n} \r\n\r\nconst enableValidation = (config) => { \r\n  const formList = document.querySelectorAll(config.formSelector);\r\n  formList.forEach((formElement) => { \r\n    formElement.addEventListener('submit', function(evt) { \r\n      evt.preventDefault(); \r\n    }); \r\n    setEventListeners(formElement, config); \r\n  });\r\n};\r\n\r\nconst clearValidation = (formElement, config) => { \r\n  const inputList = formElement.querySelectorAll(config.inputSelector); \r\n  inputList.forEach((inputElement) => { \r\n    hideInputError(formElement, inputElement, config); \r\n    inputElement.setCustomValidity(\"\"); \r\n  }); \r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  disableSubmitButton(buttonElement, config);\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => { \r\n  return Array.from(inputList).some((inputElement) => { \r\n    return !inputElement.validity.valid; \r\n  }); \r\n} \r\n\r\nconst toggleButtonState = (inputList, buttonElement, config) => { \r\n  if (hasInvalidInput(inputList)) { \r\n    disableSubmitButton(buttonElement, config); \r\n  } else {\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n    buttonElement.removeAttribute('disabled');\r\n  }\r\n} \r\n\r\nexport { enableValidation, clearValidation, config };\r\n","import './pages/index.css'; \r\n\r\nimport { createCard, handleLikeButton, deleteCard } from './components/card.js'; \r\n\r\nimport { openModal, closeModal } from './components/modal.js'; \r\n\r\nimport { enableValidation, clearValidation } from './components/validation.js'; \r\n\r\nimport {getUserData, getCardsData, updateAvatar, addNewCard, editProfile} from './components/api.js'; \r\n\r\nimport {config} from './components/config.js';\r\n\r\nconst cardList = document.querySelector('.places__list'); \r\nconst addButton = document.querySelector('.profile__add-button'); \r\nconst editButton = document.querySelector('.profile__edit-button'); \r\nconst popupNewCard = document.querySelector('.popup_type_new-card'); \r\nconst popupEditProfile = document.querySelector('.popup_type_edit'); \r\nconst popupImage = document.querySelector('.popup_type_image'); \r\nconst popupEditAvatar = document.querySelector('.popup_type_avatar-edit'); \r\nconst nameInput = document.querySelector('.popup__input_type_name'); \r\nconst jobInput = document.querySelector('.popup__input_type_description'); \r\nconst cardNameInput = document.querySelector('.popup__input_type_card-name'); \r\nconst cardUrlInput = document.querySelector('.popup__input_type_url'); \r\nconst imageElement = popupImage.querySelector('.popup__image'); \r\nconst captionElement = popupImage.querySelector('.popup__caption'); \r\nconst nameDisplay = document.querySelector('.profile__title'); \r\nconst jobDisplay = document.querySelector('.profile__description'); \r\nconst newPlaceForm = document.forms['new-place']; \r\nconst newAvatrForm = document.forms['avatar-edit']; \r\nconst avatarEditButton = document.querySelector('.profile__image'); \r\nconst avatarUrlInput = document.querySelector('.popup__input_type_avatar');\r\n\r\nlet userId;\r\nPromise.all([getUserData(), getCardsData()])\r\n  .then(([userData, cardsData]) => {\r\n    userId = userData._id;\r\n    document.querySelector('.profile__title').textContent = userData.name;\r\n    document.querySelector('.profile__description').textContent = userData.about;\r\n    document.querySelector('.profile__image').style.backgroundImage = `url(${userData.avatar})`;\r\n\r\n    cardsData.forEach((cardData) => {\r\n      const cardId = cardData._id;\r\n      const cardLikes = cardData.likes;\r\n      const ownerId = cardData.owner._id;\r\n      const cardElement = createCard(\r\n        cardData,\r\n        cardId,\r\n        userId,\r\n        ownerId,\r\n        cardLikes,\r\n        deleteCard,\r\n        handleLikeButton,\r\n        openImagePopupHandler\r\n      );\r\n      cardList.appendChild(cardElement);\r\n    });\r\n  })\r\n  .catch((error) => console.log('Ошибка при загрузке данных: ', error));\r\n\r\nfunction addCard(cardData, userId) { \r\n  const cardId = cardData._id;\r\n  const ownerId = cardData.owner._id;\r\n  const cardLikes = cardData.likes;\r\n\r\n  const cardItem = createCard(\r\n    cardData,\r\n    cardId,\r\n    userId,\r\n    ownerId,\r\n    cardLikes,\r\n    deleteCard,\r\n    handleLikeButton,\r\n    openImagePopupHandler); \r\n  cardList.prepend(cardItem); \r\n}\r\n\r\nfunction openImagePopupHandler(event) { \r\n  event.preventDefault(); \r\n  openModal(popupImage); \r\n  const imageSource = event.target.src; \r\n  const caption = event.target.alt; \r\n  imageElement.src = imageSource; \r\n  captionElement.textContent = caption; \r\n}\r\n\r\nfunction addPopupAnimation(...popups) { \r\n  popups.forEach(popup => { \r\n    if (popup) { \r\n      popup.classList.add('popup_is-animated'); \r\n    } \r\n  }); \r\n} \r\n\r\naddPopupAnimation(popupNewCard, popupEditProfile, popupImage, popupEditAvatar); \r\n\r\naddButton.addEventListener('click', () => { \r\n  newPlaceForm.reset(); \r\n  clearValidation(newPlaceForm, config); \r\n  openModal(popupNewCard); \r\n}); \r\n\r\n\r\neditButton.addEventListener('click', () => { \r\n  clearValidation(popupEditProfile, config); \r\n  openModal(popupEditProfile); \r\n  nameInput.value = nameDisplay.textContent; \r\n  jobInput.value = jobDisplay.textContent; \r\n}); \r\n\r\navatarEditButton.addEventListener('click', () => { \r\n  newAvatrForm.reset(); \r\n  clearValidation(newAvatrForm, config); \r\n  openModal(popupEditAvatar); \r\n}); \r\n\r\nfunction submitEditAvatarForm(evt) { \r\n  evt.preventDefault(); \r\n  const saveButton = popupEditAvatar.querySelector('.popup__button'); \r\n  setButtonText(saveButton, 'Сохранение...'); \r\n  const newAvatarUrl = avatarUrlInput.value; \r\n  updateAvatar(newAvatarUrl) \r\n  .then((newAvatar) => { \r\n    document.querySelector('.profile__image').style.backgroundImage = `url(${newAvatar.avatar})`; \r\n    closeModal(popupEditAvatar); \r\n  }) \r\n  .catch((error) => { \r\n    console.log('Ошибка при обновлении аватара: ', error); \r\n  })\r\n  .finally(() => {\r\n    setButtonText(saveButton, 'Сохранить'); \r\n  })\r\n} \r\n\r\nconst closeButtons = document.querySelectorAll('.popup__close'); \r\ncloseButtons.forEach(button => {\r\n  const popup = button.closest('.popup');\r\n  button.addEventListener('click', () => closeModal(popup));\r\n}); \r\n\r\nfunction submitEditProfileForm(evt) { \r\n  evt.preventDefault();  \r\n  const saveButton = popupEditProfile.querySelector('.popup__button'); \r\n  setButtonText(saveButton, 'Сохранение...'); \r\n  const newName = nameInput.value; \r\n  const newAbout = jobInput.value; \r\n  nameDisplay.textContent = newName; \r\n  jobDisplay.textContent = newAbout; \r\n  editProfile(newName, newAbout) \r\n    .then((userData) => { \r\n      nameDisplay.textContent = newName; \r\n      jobDisplay.textContent = newAbout; \r\n      closeModal(popupEditProfile); \r\n    }) \r\n    .catch((error) => { \r\n      console.log('Ошибка при обновлении данных: ', error); \r\n    })\r\n    .finally(() => {\r\n      setButtonText(saveButton, 'Сохранить'); \r\n    })\r\n} \r\n\r\npopupEditProfile.addEventListener('submit', submitEditProfileForm);  \r\n\r\nfunction handleCardFormSubmit(evt) { \r\n  evt.preventDefault(); \r\n  \r\n  const saveButton = popupEditProfile.querySelector('.popup__button');\r\n  const createButton = popupNewCard.querySelector('.popup__button'); \r\n  setButtonText(createButton, 'Сохранение...'); \r\n  const newCardName = cardNameInput.value; \r\n  const newCardLink = cardUrlInput.value; \r\n\r\n  addNewCard(newCardName, newCardLink)\r\n    .then((newCardData) => {\r\n      const cardData = {\r\n        likes: newCardData.likes,\r\n        _id: newCardData._id,\r\n        name: newCardData.name,\r\n        link: newCardData.link,\r\n        owner: {\r\n          name: newCardData.owner.name,\r\n          about: newCardData.owner.about,\r\n          avatar: newCardData.owner.avatar,\r\n          _id: newCardData.owner._id,\r\n          cohort: newCardData.owner.cohort,\r\n        },\r\n        createdAt: newCardData.createdAt,\r\n      };\r\n      addCard(cardData);\r\n      evt.target.reset();\r\n      closeModal(popupNewCard);\r\n    })\r\n    .catch((error) => { \r\n      console.log('Ошибка при добавлении новой карточки: ', error); \r\n    })\r\n    .finally(() => {\r\n      setButtonText(saveButton, 'Сохранить'); \r\n    })\r\n} \r\n\r\nfunction setButtonText(button, text) { \r\n  button.textContent = text; \r\n} \r\n\r\nnewPlaceForm.addEventListener('submit', handleCardFormSubmit); \r\nnewAvatrForm.addEventListener('submit', submitEditAvatarForm); \r\n\r\nenableValidation(config); \r\n\r\nexport{config}; \r\n"],"names":["config","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","handleLikeButton","likeButton","classList","toggle","createCard","cardData","cardId","userId","ownerId","cardLikes","deleteCard","openImagePopupHandler","cardItem","cloneNode","imgButton","deleteButton","likesCounter","src","link","textContent","name","alt","length","style","display","addEventListener","evt","preventDefault","contains","fetch","method","headers","then","unlikeCard","updatedCard","likes","catch","error","console","log","likeCard","some","user","_id","add","deleteNewCard","remove","openModal","popup","closeByOverlayClick","closeByEscHandler","closeModal","removeEventListener","event","key","target","clickedPopup","currentTarget","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","disableSubmitButton","buttonElement","setAttribute","hideInputError","formElement","inputElement","errorElement","id","clearValidation","querySelectorAll","forEach","setCustomValidity","toggleButtonState","inputList","Array","from","validity","valid","hasInvalidInput","removeAttribute","cardList","addButton","editButton","popupNewCard","popupEditProfile","popupImage","popupEditAvatar","nameInput","jobInput","cardNameInput","cardUrlInput","imageElement","captionElement","nameDisplay","jobDisplay","newPlaceForm","forms","newAvatrForm","avatarEditButton","avatarUrlInput","imageSource","caption","setButtonText","button","text","all","_ref","_ref2","userData","cardsData","about","backgroundImage","avatar","owner","cardElement","appendChild","_len","arguments","popups","_key","addPopupAnimation","reset","value","closest","saveButton","profileName","profileAbout","newName","newAbout","body","JSON","stringify","getUserData","finally","cardName","cardLink","newCardData","cohort","createdAt","addCard","prepend","avatarImg","newAvatar","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}